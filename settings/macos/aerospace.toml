# This configuration supports both internal and external keyboards with key mappings applied via `macOS` keyboard settings:
#
# INTERNAL KEYBOARD MAPPINGS:
#   - Option/Alt switched with Control.
#   - Globe acts as Left Command.
#   - Section Sign acts as Tilde.
#   - Right Shift acts as Delete.
#
# EXTERNAL KEYBOARD MAPPINGS:
#   - Control acts as Command.
#   - Super acts as Option/Alt.
#   - Option/Alt acts as Control.
#
# `Aerospace` uses the physical keys as the input method so:
#   - We are going to use Option/Alt as the main modifier key for window management.
#   - Dual bindings (Control and Command) are provided for launching applications and system actions like `Spotlight` and input source switching.

# Start `Aerospace` at login.
start-at-login = true

# Enable normalization.
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# Disable accordion padding.
accordion-padding = 0

# Set tiles layout as default.
default-root-container-layout = 'tiles'

# Set orientation according to monitor aspect ratio.
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes.
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Automatically re-appear hidden apps on `macOS`.
automatically-unhide-macos-hidden-apps = false

# Floating windows.
[[on-window-detected]]
if.app-name-regex-substring = 'finder'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'wezterm'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'settings'
run = 'layout floating'

# Set key mapping preset.
[key-mapping]
preset = 'qwerty'

# Gaps between each window.
[gaps]
inner.horizontal = 5
inner.vertical = 5
outer.left = 5
outer.bottom = 5
outer.top = 40
outer.right = 5

# 'main' binding mode declaration.
[mode.main.binding]

# Layout floating/tiling toggle.
alt-shift-t = 'layout floating tiling'

# Toggle fullscreen.
alt-shift-f = 'fullscreen'

# Join windows together.
alt-shift-up = 'join-with up'
alt-shift-down = 'join-with down'
alt-shift-left = 'join-with left'
alt-shift-right = 'join-with right'

# Rotate windows.
alt-r = 'layout tiles horizontal vertical'

# Focus navigation.
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# Move windows.
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# Resize focused window.
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# Workspace management.
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 10'

# Move window to specific workspace.
alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
alt-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
alt-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
alt-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
alt-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
alt-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'
alt-shift-0 = 'move-node-to-workspace 10 --focus-follows-window'

# Change workspace and focus it.
alt-right = 'workspace next'
alt-left = 'workspace prev'

# Move workspace to next monitor.
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Reload environment.
alt-backslash = 'exec-and-forget ~/.config/scripts/utilities/macos/reload_environment.sh'

# Enter service mode.
alt-semicolon = 'mode service'

# Language switch.
ctrl-space = 'exec-and-forget osascript ~/.config/scripts/utilities/macos/switch_input_source.scpt'
cmd-space = 'exec-and-forget osascript ~/.config/scripts/utilities/macos/switch_input_source.scpt'

# Spotlight trigger script.
ctrl-period = 'exec-and-forget ~/.config/scripts/utilities/macos/open_spotlight.sh'
cmd-period = 'exec-and-forget ~/.config/scripts/utilities/macos/open_spotlight.sh'

# Applications.
ctrl-b = 'exec-and-forget open -a "/Applications/Google Chrome.app"'
cmd-b = 'exec-and-forget open -a "/Applications/Google Chrome.app"'

ctrl-e = 'exec-and-forget open -a "/Applications/Visual Studio Code.app"'
cmd-e = 'exec-and-forget open -a "/Applications/Visual Studio Code.app"'

ctrl-backtick = 'exec-and-forget open -a Finder'
cmd-backtick = 'exec-and-forget open -a Finder'

ctrl-m = 'exec-and-forget open -a /Applications/Spotify.app'
cmd-m = 'exec-and-forget open -a /Applications/Spotify.app'

ctrl-k = 'exec-and-forget open -a /Applications/Obsidian.app'
cmd-k = 'exec-and-forget open -a /Applications/Obsidian.app'

ctrl-quote = 'exec-and-forget open -a "/System/Applications/System Settings.app"'
cmd-quote = 'exec-and-forget open -a "/System/Applications/System Settings.app"'

ctrl-t = 'exec-and-forget open -a "/Applications/Sublime Text.app"'
cmd-t = 'exec-and-forget open -a "/Applications/Sublime Text.app"'

ctrl-semicolon = 'exec-and-forget osascript ~/.config/scripts/utilities/macos/open_wezterm.scpt'
cmd-semicolon = 'exec-and-forget osascript ~/.config/scripts/utilities/macos/open_wezterm.scpt'

# Lock screen.
ctrl-minus = 'exec-and-forget ~/.config/scripts/utilities/macos/lock_screen.sh'
cmd-minus = 'exec-and-forget ~/.config/scripts/utilities/macos/lock_screen.sh'

# TODO: Add keybindings to trigger system shutdown and restart.

# 'service' binding mode declaration.
[mode.service.binding]

# After entering service mode, press L to reload the configuration.
l = ['reload-config', 'mode main']

# After entering service mode, press R to reload the configuration and return to the main mode.
r = ['flatten-workspace-tree', 'mode main']

# After entering service mode, press W to configure workspaces based on current displays setup.
w = [
    'exec-and-forget ~/.config/scripts/utilities/macos/configure_workspaces.sh',
    'mode main',
]

# After entering service mode, press Backspace to close all windows except the current one.
backspace = ['close-all-windows-but-current', 'mode main']
